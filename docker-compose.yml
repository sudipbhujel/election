version: "3"

services: 
    app: &app
        build: 
            context: .
        ports: 
            - "8000:8000"
        volumes: 
            - ./backend:/backend
        command: >
            sh -c "python manage.py wait_for_db &&
                    python manage.py migrate &&
                    python manage.py runserver 0.0.0.0:8000"
        environment: 
            - SECRET_KEY=_b=x&inb(x!ic_er+lvjremkj4g7-+hth8nro4o)zimr7a1+s%
            - DB_HOST=db
            - DB_NAME=election
            - DB_USER=postgres
            - DB_PASS=supersecretpassword
        depends_on: 
            - db
            - redis
            - celery
    db:
        image: postgres:12-alpine
        environment: 
            - POSTGRES_DB=election
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=supersecretpassword
        volumes:
            - postgresql_data:/var/lib/postgresql/data
        ports:
            - 5432:5432
    redis:
        image: redis:6-alpine
    celery:
        <<: *app
        command: celery -A app worker -l INFO
        ports: []
        depends_on:
            - redis
            - db
    
    # frontend:
    #     build:
    #         context: .
    #         dockerfile: frontend.Dockerfile
    #     ports:
    #         - "3000:3000"
    #     volumes: 
    #         - frontend/node_modules
    #         - ./frontend:/frontend
    #     command: >
    #         sh -c "yarn dev"
    frontend-react:
        build:
            context: .
            dockerfile: frontend.Dockerfile
        ports:
            - "3000:3000"
        stdin_open: true
        volumes: 
            - frontend-react/node_modules
            - ./frontend-react:/frontend-react
        command: >
            sh -c "yarn start"


volumes: 
    postgresql_data: